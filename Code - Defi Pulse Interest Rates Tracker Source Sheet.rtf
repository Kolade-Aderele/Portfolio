{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red20\green67\blue174;\red255\green255\blue254;\red46\green49\blue51;
\red24\green25\blue27;\red186\green6\blue115;\red162\green0\blue16;\red77\green80\blue85;\red18\green115\blue126;
}
{\*\expandedcolortbl;;\cssrgb\c9412\c35294\c73725;\cssrgb\c100000\c100000\c99608;\cssrgb\c23529\c25098\c26275;
\cssrgb\c12549\c12941\c14118;\cssrgb\c78824\c15294\c52549;\cssrgb\c70196\c7843\c7059;\cssrgb\c37255\c38824\c40784;\cssrgb\c3529\c52157\c56863;
}
\margl1440\margr1440\vieww28600\viewh15160\viewkind0
\deftab720
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 function\cf4 \strokec4  \cf5 \strokec5 onOpen\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\sl400\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 ui\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 getUi\cf4 \strokec4 ();\cb1 \
\cb3   \cf5 \strokec5 ui\cf4 \strokec4 .\cf5 \strokec5 createMenu\cf4 \strokec4 (\cf7 \strokec7 'Get DefiPulse Interest Rate Data'\cf4 \strokec4 )\cb1 \
\cb3       .\cf5 \strokec5 addItem\cf4 \strokec4 (\cf7 \strokec7 'Get Borrow Interest Rates'\cf4 \strokec4 ,\cf7 \strokec7 'CallBorrowRate'\cf4 \strokec4 )\cb1 \
\cb3       .\cf5 \strokec5 addItem\cf4 \strokec4 (\cf7 \strokec7 'Get Lending Interest Rates'\cf4 \strokec4 ,\cf7 \strokec7 'CallLendRate'\cf4 \strokec4 ,)\cb1 \
\cb3       .\cf5 \strokec5 addItem\cf4 \strokec4 (\cf7 \strokec7 'Get Interest Speed'\cf4 \strokec4 ,\cf7 \strokec7 'CallInterestSpeed'\cf4 \strokec4 )\cb1 \
\cb3      \cf8 \strokec8 // .addItem('Get Handshake Data','callHandshake')\cf4 \cb1 \strokec4 \
\cb3       .\cf5 \strokec5 addToUi\cf4 \strokec4 ();\cb1 \
\cb3 \}\cb1 \
\
\
\pard\pardeftab720\sl400\partightenfactor0
\cf2 \cb3 \strokec2 function\cf4 \strokec4  \cf6 \strokec6 CallBorrowRate\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\sl400\partightenfactor0
\cf4 \cb3   \cb1 \
\cb3  \cf8 \strokec8 // Call the interest rate from the Defi Pulse Lending & Borrowing Interest Rates API\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 api\cf4 \strokec4  = \cf6 \strokec6 UrlFetchApp\cf4 \strokec4 .\cf5 \strokec5 fetch\cf4 \strokec4 (\cf7 \strokec7 "https://data-api.defipulse.com/api/v1/defipulse/api/getLendingHistory?period=all&api-key=71622ab6940cfff38d9b658b97f511fb7a8ca1d8488381e6dd0081c5a9f5"\cf4 \strokec4 );\cb1 \
\cb3   \cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 data_api\cf4 \strokec4  = \cf5 \strokec5 api\cf4 \strokec4 .\cf5 \strokec5 getContentText\cf4 \strokec4 ();\cb1 \
\cb3   \cf8 \strokec8 //Logger.log(data_api)\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 sheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openByUrl\cf4 \strokec4 (\cf7 \strokec7 "https://docs.google.com/spreadsheets/d/1WEpqH3lw0yLk2CrXqpJ-vlN6Q0bZ0zbLo7vNGMI4iOY/edit#gid=0"\cf4 \strokec4 )\cb1 \
\cb3   \cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 borrow_sheet\cf4 \strokec4  = \cf5 \strokec5 sheet\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 "Borrowing Rates"\cf4 \strokec4 )\cb1 \
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 parse_data_api\cf4 \strokec4  = \cf6 \strokec6 JSON\cf4 \strokec4 .\cf5 \strokec5 parse\cf4 \strokec4 (\cf5 \strokec5 data_api\cf4 \strokec4 )\cb1 \
\cb3   \cf8 \strokec8 //Logger.log(parse_data_api["rates"])\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 borrow_sheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 ,\cf9 \strokec9 1\cf4 \strokec4 ,\cf9 \strokec9 500\cf4 \strokec4 ,\cf9 \strokec9 500\cf4 \strokec4 ).\cf5 \strokec5 clearContent\cf4 \strokec4 ();\cb1 \
\cb3   \cb1 \
\cb3  \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 row\cf4 \strokec4 ;\cb1 \
\cb3   \cb1 \
\cb3   \cb1 \
\cb3   \cf2 \strokec2 for\cf4 \strokec4 (\cf5 \strokec5 row\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 row\cf4 \strokec4  < \cf5 \strokec5 parse_data_api\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4  ; \cf5 \strokec5 row\cf4 \strokec4 ++)\{\cb1 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 store_data\cf4 \strokec4  = \cf6 \strokec6 Object\cf4 \strokec4 .\cf5 \strokec5 values\cf4 \strokec4 (\cf5 \strokec5 parse_data_api\cf4 \strokec4 [\cf5 \strokec5 row\cf4 \strokec4 ][\cf7 \strokec7 "borrow_rates"\cf4 \strokec4 ]) \cb1 \
\cb3     \cf8 \strokec8 //Logger.log(Object.values(parse_data_api[row]["borrow_rates"]) )\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 initial_col\cf4 \strokec4 ;\cb1 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4  (\cf5 \strokec5 initial_col\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 initial_col\cf4 \strokec4 < \cf5 \strokec5 parse_data_api\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 ; \cf5 \strokec5 initial_col\cf4 \strokec4 ++)\cb1 \
\cb3     \{ \cb1 \
\cb3       \cb1 \
\cb3       \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 initial_col\cf4 \strokec4  ===\cf9 \strokec9 0\cf4 \strokec4 ) \cf5 \strokec5 borrow_sheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf5 \strokec5 row\cf4 \strokec4 +\cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 initial_col\cf4 \strokec4  +\cf9 \strokec9 1\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf2 \strokec2 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 ( \cf5 \strokec5 parse_data_api\cf4 \strokec4 [\cf5 \strokec5 row\cf4 \strokec4 ][\cf7 \strokec7 "timestamp"\cf4 \strokec4 ]*\cf9 \strokec9 1000\cf4 \strokec4 ))\cb1 \
\cb3       \cb1 \
\cb3         \}\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 rest_col\cf4 \strokec4 ;\cb1 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4 (\cf5 \strokec5 rest_col\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 rest_col\cf4 \strokec4  < \cf5 \strokec5 store_data\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 ; \cf5 \strokec5 rest_col\cf4 \strokec4 ++)\cb1 \
\cb3     \{\cb1 \
\cb3       \cf5 \strokec5 borrow_sheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf5 \strokec5 row\cf4 \strokec4  + \cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 rest_col\cf4 \strokec4 +\cf9 \strokec9 2\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf5 \strokec5 store_data\cf4 \strokec4 [\cf5 \strokec5 rest_col\cf4 \strokec4 ]/\cf9 \strokec9 100\cf4 \strokec4 )\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3     \cb1 \
\cb3 \}  \cb1 \
\
\
\cb3       \cb1 \
\cb3       \cb1 \
\
\pard\pardeftab720\sl400\partightenfactor0
\cf2 \cb3 \strokec2 function\cf4 \strokec4  \cf6 \strokec6 CallLendRate\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\sl400\partightenfactor0
\cf4 \cb3   \cb1 \
\cb3  \cf8 \strokec8 // Call the interest rate from the Defi Pulse Lending & Borrowing Interest Rates API\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 api\cf4 \strokec4  = \cf6 \strokec6 UrlFetchApp\cf4 \strokec4 .\cf5 \strokec5 fetch\cf4 \strokec4 (\cf7 \strokec7 "https://data-api.defipulse.com/api/v1/defipulse/api/getLendingHistory?period=all&api-key=71622ab6940cfff38d9b658b97f511fb7a8ca1d8488381e6dd0081c5a9f5"\cf4 \strokec4 );\cb1 \
\cb3   \cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 data_api\cf4 \strokec4  = \cf5 \strokec5 api\cf4 \strokec4 .\cf5 \strokec5 getContentText\cf4 \strokec4 ();\cb1 \
\cb3   \cf8 \strokec8 //Logger.log(data_api)\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 sheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openByUrl\cf4 \strokec4 (\cf7 \strokec7 "https://docs.google.com/spreadsheets/d/1WEpqH3lw0yLk2CrXqpJ-vlN6Q0bZ0zbLo7vNGMI4iOY/edit#gid=0"\cf4 \strokec4 )\cb1 \
\cb3   \cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 lend_sheet\cf4 \strokec4  = \cf5 \strokec5 sheet\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 "Lending Rates"\cf4 \strokec4 )\cb1 \
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 parse_data_api\cf4 \strokec4  = \cf6 \strokec6 JSON\cf4 \strokec4 .\cf5 \strokec5 parse\cf4 \strokec4 (\cf5 \strokec5 data_api\cf4 \strokec4 )\cb1 \
\cb3   \cf8 \strokec8 //Logger.log(parse_data_api["rates"])\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 lend_sheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 ,\cf9 \strokec9 1\cf4 \strokec4 ,\cf9 \strokec9 500\cf4 \strokec4 ,\cf9 \strokec9 500\cf4 \strokec4 ).\cf5 \strokec5 clearContent\cf4 \strokec4 ();\cb1 \
\cb3   \cb1 \
\cb3  \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 row\cf4 \strokec4 ;\cb1 \
\cb3   \cb1 \
\cb3   \cb1 \
\cb3   \cf2 \strokec2 for\cf4 \strokec4 (\cf5 \strokec5 row\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 row\cf4 \strokec4  < \cf5 \strokec5 parse_data_api\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4  ; \cf5 \strokec5 row\cf4 \strokec4 ++)\{\cb1 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 store_data\cf4 \strokec4  = \cf6 \strokec6 Object\cf4 \strokec4 .\cf5 \strokec5 values\cf4 \strokec4 (\cf5 \strokec5 parse_data_api\cf4 \strokec4 [\cf5 \strokec5 row\cf4 \strokec4 ][\cf7 \strokec7 "lend_rates"\cf4 \strokec4 ]) \cb1 \
\cb3     \cf8 \strokec8 //Logger.log(Object.values(parse_data_api[row]["borrow_rates"]) )\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 initial_col\cf4 \strokec4 ;\cb1 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4  (\cf5 \strokec5 initial_col\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 initial_col\cf4 \strokec4 < \cf5 \strokec5 parse_data_api\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 ; \cf5 \strokec5 initial_col\cf4 \strokec4 ++)\cb1 \
\cb3     \{ \cb1 \
\cb3       \cb1 \
\cb3       \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 initial_col\cf4 \strokec4  ===\cf9 \strokec9 0\cf4 \strokec4 ) \cf5 \strokec5 lend_sheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf5 \strokec5 row\cf4 \strokec4 +\cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 initial_col\cf4 \strokec4  +\cf9 \strokec9 1\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf2 \strokec2 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 ( \cf5 \strokec5 parse_data_api\cf4 \strokec4 [\cf5 \strokec5 row\cf4 \strokec4 ][\cf7 \strokec7 "timestamp"\cf4 \strokec4 ]*\cf9 \strokec9 1000\cf4 \strokec4 ))\cb1 \
\cb3       \cb1 \
\cb3         \}\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 rest_col\cf4 \strokec4 ;\cb1 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4 (\cf5 \strokec5 rest_col\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 rest_col\cf4 \strokec4  < \cf5 \strokec5 store_data\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 ; \cf5 \strokec5 rest_col\cf4 \strokec4 ++)\cb1 \
\cb3     \{\cb1 \
\cb3       \cf5 \strokec5 lend_sheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf5 \strokec5 row\cf4 \strokec4  + \cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 rest_col\cf4 \strokec4 +\cf9 \strokec9 2\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf5 \strokec5 store_data\cf4 \strokec4 [\cf5 \strokec5 rest_col\cf4 \strokec4 ]/\cf9 \strokec9 100\cf4 \strokec4 )\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3     \cb1 \
\cb3 \}  \cb1 \
\
\
\pard\pardeftab720\sl400\partightenfactor0
\cf2 \cb3 \strokec2 function\cf4 \strokec4  \cf6 \strokec6 CallInterestSpeed\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\sl400\partightenfactor0
\cf4 \cb3   \cb1 \
\cb3  \cf8 \strokec8 // Call the interest rate from the Defi Pulse Lending & Borrowing Interest Rates API\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 api\cf4 \strokec4  = \cf6 \strokec6 UrlFetchApp\cf4 \strokec4 .\cf5 \strokec5 fetch\cf4 \strokec4 (\cf7 \strokec7 "https://data-api.defipulse.com/api/v1/defipulse/api/getLendingHistory?period=all&api-key=71622ab6940cfff38d9b658b97f511fb7a8ca1d8488381e6dd0081c5a9f5"\cf4 \strokec4 );\cb1 \
\cb3   \cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 data_api\cf4 \strokec4  = \cf5 \strokec5 api\cf4 \strokec4 .\cf5 \strokec5 getContentText\cf4 \strokec4 ();\cb1 \
\cb3   \cf8 \strokec8 //Logger.log(data_api)\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 sheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openByUrl\cf4 \strokec4 (\cf7 \strokec7 "https://docs.google.com/spreadsheets/d/1WEpqH3lw0yLk2CrXqpJ-vlN6Q0bZ0zbLo7vNGMI4iOY/edit#gid=0"\cf4 \strokec4 )\cb1 \
\cb3   \cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 interest_sheet\cf4 \strokec4  = \cf5 \strokec5 sheet\cf4 \strokec4 .\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 "Interest Speed"\cf4 \strokec4 )\cb1 \
\
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 parse_data_api\cf4 \strokec4  = \cf6 \strokec6 JSON\cf4 \strokec4 .\cf5 \strokec5 parse\cf4 \strokec4 (\cf5 \strokec5 data_api\cf4 \strokec4 )\cb1 \
\cb3   \cf8 \strokec8 //Logger.log(parse_data_api["rates"])\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\cb3   \cf5 \strokec5 interest_sheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 ,\cf9 \strokec9 1\cf4 \strokec4 ,\cf9 \strokec9 500\cf4 \strokec4 ,\cf9 \strokec9 500\cf4 \strokec4 ).\cf5 \strokec5 clearContent\cf4 \strokec4 ();\cb1 \
\cb3   \cb1 \
\cb3  \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 row\cf4 \strokec4 ;\cb1 \
\cb3   \cb1 \
\cb3   \cb1 \
\cb3   \cf2 \strokec2 for\cf4 \strokec4 (\cf5 \strokec5 row\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 row\cf4 \strokec4  < \cf5 \strokec5 parse_data_api\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4  ; \cf5 \strokec5 row\cf4 \strokec4 ++)\{\cb1 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 store_data\cf4 \strokec4  = \cf6 \strokec6 Object\cf4 \strokec4 .\cf5 \strokec5 values\cf4 \strokec4 (\cf5 \strokec5 parse_data_api\cf4 \strokec4 [\cf5 \strokec5 row\cf4 \strokec4 ][\cf7 \strokec7 "interest_speed"\cf4 \strokec4 ]) \cb1 \
\cb3     \cf8 \strokec8 //Logger.log(Object.values(parse_data_api[row]["borrow_rates"]) )\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 initial_col\cf4 \strokec4 ;\cb1 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4  (\cf5 \strokec5 initial_col\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 initial_col\cf4 \strokec4 < \cf5 \strokec5 parse_data_api\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 ; \cf5 \strokec5 initial_col\cf4 \strokec4 ++)\cb1 \
\cb3     \{ \cb1 \
\cb3       \cb1 \
\cb3       \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 initial_col\cf4 \strokec4  ===\cf9 \strokec9 0\cf4 \strokec4 ) \cf5 \strokec5 interest_sheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf5 \strokec5 row\cf4 \strokec4 +\cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 initial_col\cf4 \strokec4  +\cf9 \strokec9 1\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf2 \strokec2 new\cf4 \strokec4  \cf6 \strokec6 Date\cf4 \strokec4 ( \cf5 \strokec5 parse_data_api\cf4 \strokec4 [\cf5 \strokec5 row\cf4 \strokec4 ][\cf7 \strokec7 "timestamp"\cf4 \strokec4 ]*\cf9 \strokec9 1000\cf4 \strokec4 ))\cb1 \
\cb3       \cb1 \
\cb3         \}\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 rest_col\cf4 \strokec4 ;\cb1 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4 (\cf5 \strokec5 rest_col\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ; \cf5 \strokec5 rest_col\cf4 \strokec4  < \cf5 \strokec5 store_data\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 ; \cf5 \strokec5 rest_col\cf4 \strokec4 ++)\cb1 \
\cb3     \{\cb1 \
\cb3       \cf5 \strokec5 interest_sheet\cf4 \strokec4 .\cf5 \strokec5 getRange\cf4 \strokec4 (\cf5 \strokec5 row\cf4 \strokec4  + \cf9 \strokec9 1\cf4 \strokec4 , \cf5 \strokec5 rest_col\cf4 \strokec4 +\cf9 \strokec9 2\cf4 \strokec4 ).\cf5 \strokec5 setValue\cf4 \strokec4 (\cf6 \strokec6 Object\cf4 \strokec4 .\cf5 \strokec5 values\cf4 \strokec4 (\cf5 \strokec5 store_data\cf4 \strokec4 [\cf5 \strokec5 rest_col\cf4 \strokec4 ]))\cb1 \
\cb3       \cf6 \strokec6 Logger\cf4 \strokec4 .\cf5 \strokec5 log\cf4 \strokec4 (\cf6 \strokec6 Object\cf4 \strokec4 .\cf5 \strokec5 values\cf4 \strokec4 (\cf5 \strokec5 store_data\cf4 \strokec4 [\cf5 \strokec5 rest_col\cf4 \strokec4 ]))\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3     \cb1 \
\cb3 \}  \cb1 \
\
\
\
\
\pard\pardeftab720\sl400\partightenfactor0
\cf8 \cb3 \strokec8 /*\cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 var api = UrlFetchApp.fetch("https://data-api.defipulse.com/api/v1/defipulse/api/getLendingHistory?period=all&api-key=71622ab6940cfff38d9b658b97f511fb7a8ca1d8488381e6dd0081c5a9f5");\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8   \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8   var data_api = api.getContentText();\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8   //Logger.log(data_api)\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8   var sheet = SpreadsheetApp.getActiveSheet()\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8   \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8   var parse_data_api = JSON.parse(data_api)\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8   //Logger.log(parse_data_api["rates"])\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8   \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8   sheet.getRange(1,1,500,500).clearContent();\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8   \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8  var row;\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8   \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8   \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8   for(row = 0; row < parse_data_api.length ; row++)\{\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     var store_data = Object.values(parse_data_api[row]["interest_speed"]) \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     //Logger.log(Object.values(parse_data_api[row]["borrow_rates"]) )\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     var initial_col;\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     for (initial_col = 0; initial_col< parse_data_api.length; initial_col++)\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     \{ \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8       \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8       if (initial_col ===0) sheet.getRange(row+1, initial_col +1).setValue(new Date( parse_data_api[row]["timestamp"]*1000))\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8       \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8         \}\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     var rest_col;\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     for(rest_col = 0; rest_col < store_data.length; rest_col++)\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     \{\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     var store_data_USD = Object.values(store_data[rest_col])\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     var rest_col_USD;\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     for (rest_col_USD = 0; rest_col_USD< store_data.length; rest_col_USD++)\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     \{\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8       sheet.getRange(row + 1, rest_col_USD+2).setValue(store_data_USD)\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8       Logger.log(store_data_USD)\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     \}\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8   \}\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8     \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 \}\cf4 \cb1 \strokec4 \
\
\
\cf8 \cb3 \strokec8 */\cf4 \cb1 \strokec4 \
\
\
}